version: '3.7'
services:
  traefik:
    image: traefik:v2.2
    command:
      # enable web ui
      - "--api.insecure=true"
      # set provider to docker
      - "--providers.docker=true"
      #only expose containers with 'traefik.enable=true' label
      - "--providers.docker.exposedbydefault=false"
      # set entrypoints
      - "--entryPoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # ACME (Let's Encrypt) auto SSL
      - "--certificatesResolvers.leresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesResolvers.leresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesResolvers.leresolver.acme.tlsChallenge=true"
        #- "--certificatesResolvers.leresolver.acme.httpChallenge=true"
        #- "--certificatesResolvers.leresolver.acme.httpChallenge.entryPoint=web"
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - web
    volumes:
      # Allow traefik to listen on docker socket
      - "/var/run/docker.sock:/var/run/docker.sock"
      # Lets Encrypt
      - "./data/letsencrypt/acme.json:/letsencrypt/acme.json"
    labels:
      # Redirect all HTTP to HTTPS permanently
      - "traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)"
      - "traefik.http.routers.http_catchall.entrypoints=web"
      - "traefik.http.routers.http_catchall.middlewares=https_redirect"
      - "traefik.http.middlewares.https_redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"
        #enable traefik auto discovery
      - "traefik.enable=true"
        #entry point for router
      - "traefik.http.routers.traefik.entrypoints=websecure"
        #rule which router will route requests from
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
        #enable tls for router
      - "traefik.http.routers.traefik.tls=true"
        #specify cert resolver for router
      - "traefik.http.routers.traefik.tls.certresolver=leresolver"
        #tell service which port (in container) to route trafic to
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  db:
    build: db
    restart: always
    ports:
      #  HOST : CONTAINER
      - "127.0.0.1:3306:3306"
    environment:
      - "MYSQL_ROOT_PASSWORD=password"
      - "MYSQL_DATABASE=notifications"
    volumes:
      - "./data/db:/var/lib/mysql"
    labels:
      #disable traekfik auto discovery
      - "traefik.enable=false"
    networks:
      - web

  api:
    build: api
    restart: always
    networks:
      - web
    links:
      - db:db
    depends_on: [db]
    volumes:
      - "./data/keys:/keys"
    labels:
        #enable traefik auto discovery
      - "traefik.enable=true"
        #entry point for router
      - "traefik.http.routers.api.entrypoints=websecure"
        #rule which router will route requests from
      - "traefik.http.routers.api.rule=Host(`notifications.jangui.dev`)"
        #enable tls for router
      - "traefik.http.routers.api.tls=true"
        #specify cert resolver for router
      - "traefik.http.routers.api.tls.certresolver=leresolver"
        #tell service which port (in container) to route trafic to
      - "traefik.http.services.api.loadbalancer.server.port=5000"

networks:
    web:

